<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
</head>
<body class="bg-gradient-to-br from-emerald-50 to-teal-50 min-h-screen">
    <div class="max-w-7xl mx-auto p-6 space-y-6">
        <!-- Header -->
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Activity Provider Dashboard</h1>
                <p class="text-gray-600">Manage Island Hopping & Snorkeling Activities</p>
            </div>
            <div class="flex space-x-4">
                <a href="/logout" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg">Logout</a>
            </div>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Total Packages</p>
                        <p class="text-2xl font-bold text-gray-900"><%= stats.totalPackages %></p>
                    </div>
                    <i data-lucide="ship" class="w-8 h-8 text-gray-400"></i>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Total Bookings</p>
                        <p class="text-2xl font-bold text-gray-900"><%= stats.totalBookings %></p>
                    </div>
                    <i data-lucide="calendar" class="w-8 h-8 text-gray-400"></i>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Monthly Revenue</p>
                        <p class="text-2xl font-bold text-emerald-600">â‚±<%= stats.monthlyRevenue.toLocaleString() %></p>
                    </div>
                    <i data-lucide="dollar-sign" class="w-8 h-8 text-emerald-400"></i>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Active Bookings</p>
                        <p class="text-2xl font-bold text-blue-600"><%= stats.activeBookings %></p>
                    </div>
                    <i data-lucide="users" class="w-8 h-8 text-blue-400"></i>
                </div>
            </div>
        </div>

        <!-- Tabs -->
        <div class="bg-white rounded-lg shadow">
            <div class="border-b border-gray-200">
                <nav class="-mb-px flex space-x-8 px-6">
                    <button class="tab-btn active py-4 px-1 border-b-2 border-emerald-500 font-medium text-sm text-emerald-600" data-tab="packages">
                        My Packages
                    </button>
                    <button class="tab-btn py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700" data-tab="bookings">
                        Bookings
                    </button>
                    <button class="tab-btn py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700" data-tab="analytics">
                        Analytics
                    </button>
                </nav>
            </div>

            <!-- Packages Tab -->
            <div id="packages-tab" class="tab-content p-6">
                <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                    <% packages.forEach(package => { %>
                        <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <span class="px-2 py-1 text-xs rounded-full 
                                    <% if (package.activity_type === 'Island Hopping') { %>bg-blue-100 text-blue-800<% } else { %>bg-teal-100 text-teal-800<% } %>">
                                    <% if (package.activity_type === 'Island Hopping') { %>ðŸš¢<% } else { %>ðŸŒŠ<% } %>
                                    <%= package.activity_type %>
                                </span>
                            </div>
                            
                            <h3 class="font-semibold text-lg mb-2"><%= package.name %></h3>
                            <p class="text-gray-600 text-sm mb-4"><%= package.description %></p>
                            
                            <div class="space-y-2">
                                <div class="flex items-center justify-between">
                                    <span class="text-2xl font-bold text-emerald-600">â‚±<%= package.price.toLocaleString() %></span>
                                    <div class="flex items-center text-sm text-gray-600">
                                        <i data-lucide="clock" class="w-4 h-4 mr-1"></i>
                                        <%= package.duration %> day<%= package.duration > 1 ? 's' : '' %>
                                    </div>
                                </div>
                                
                                <div class="flex items-center text-sm text-gray-600">
                                    <i data-lucide="users" class="w-4 h-4 mr-1"></i>
                                    Max <%= package.max_participants %> people
                                </div>
                                
                                <div class="text-sm text-gray-600">
                                    <strong>Includes:</strong> <%= package.includes %>
                                </div>

                                <!-- Reviews Section -->
                                <div class="mt-4 pt-4 border-t border-gray-200">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <i data-lucide="star" class="w-4 h-4 text-yellow-400 mr-1"></i>
                                            <span class="font-semibold">
                                                <%= package.average_rating ? Number(package.average_rating).toFixed(1) : 'No ratings' %>
                                            </span>
                                            <span class="text-gray-500 ml-2">
                                                (<%= package.review_count %> <%= package.review_count === 1 ? 'review' : 'reviews' %>)
                                            </span>
                                        </div>
                                        <button onclick="viewPackageReviews(<%= package.id %>)" 
                                                class="text-blue-600 hover:text-blue-700 text-sm font-medium">
                                            View Reviews
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Bookings Tab -->
            <div id="bookings-tab" class="tab-content p-6 hidden">
                <div class="space-y-4">
                    <% bookings.forEach(booking => { %>
                        <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                            <div class="space-y-1">
                                <div class="flex items-center space-x-2">
                                    <h3 class="font-medium"><%= booking.package_name %></h3>
                                    <span class="px-2 py-1 text-xs rounded-full 
                                        <% if (booking.status === 'confirmed') { %>bg-green-100 text-green-800<% } 
                                           else if (booking.status === 'pending') { %>bg-yellow-100 text-yellow-800<% } 
                                           else if (booking.status === 'completed') { %>bg-blue-100 text-blue-800<% } 
                                           else { %>bg-red-100 text-red-800<% } %>">
                                        <%= booking.status %>
                                    </span>
                                </div>
                                <p class="text-sm text-gray-600">
                                    <%= booking.first_name %> <%= booking.last_name %> â€¢ <%= booking.number_of_participants %> participants
                                </p>
                                <p class="text-sm text-gray-600">
                                    <%= new Date(booking.booking_date).toLocaleDateString() %> â€¢ <%= booking.contact_number %>
                                </p>
                                <% if (booking.special_requests) { %>
                                    <p class="text-sm text-blue-600">Special: <%= booking.special_requests %></p>
                                <% } %>
                            </div>

                            <div class="text-right space-y-2">
                                <p class="font-bold text-lg">â‚±<%= booking.total_amount.toLocaleString() %></p>
                                <div class="flex space-x-2">
                                    <% if (booking.status === 'pending') { %>
                                        <button onclick="updateBookingStatus(<%= booking.id %>, 'confirmed')" 
                                                class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm">
                                            Confirm
                                        </button>
                                        <button onclick="updateBookingStatus(<%= booking.id %>, 'cancelled')" 
                                                class="border border-gray-300 hover:bg-gray-50 px-3 py-1 rounded text-sm">
                                            Cancel
                                        </button>
                                    <% } else if (booking.status === 'confirmed') { %>
                                        <button onclick="updateBookingStatus(<%= booking.id %>, 'completed')" 
                                                class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm">
                                            Complete
                                        </button>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Analytics Tab -->
            <div id="analytics-tab" class="tab-content p-6 hidden">
                <div class="grid gap-6 md:grid-cols-2">
                    <div class="border border-gray-200 rounded-lg p-6">
                        <h3 class="font-semibold mb-4">Package Performance</h3>
                        <div class="space-y-4">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-2">
                                    <span>ðŸš¢ Island Hopping</span>
                                </div>
                                <span class="font-bold">
                                    <%= bookings.filter(b => packages.find(p => p.id === b.package_id && p.activity_type === 'Island Hopping')).length %> bookings
                                </span>
                            </div>
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-2">
                                    <span>ðŸŒŠ Snorkeling</span>
                                </div>
                                <span class="font-bold">
                                    <%= bookings.filter(b => packages.find(p => p.id === b.package_id && p.activity_type === 'Snorkeling')).length %> bookings
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="border border-gray-200 rounded-lg p-6">
                        <h3 class="font-semibold mb-4">Revenue Breakdown</h3>
                        <div class="space-y-4">
                            <div class="flex items-center justify-between">
                                <span>Total Revenue</span>
                                <span class="font-bold text-lg">â‚±<%= stats.monthlyRevenue.toLocaleString() %></span>
                            </div>
                            <div class="flex items-center justify-between">
                                <span>Average per Booking</span>
                                <span class="font-bold">
                                    â‚±<%= stats.totalBookings > 0 ? Math.round(stats.monthlyRevenue / stats.totalBookings).toLocaleString() : 0 %>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add Package Modal -->
        <div id="packageModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-semibold">Add New Package</h3>
                    <button id="closePackageModal" class="text-gray-400 hover:text-gray-600">
                        <i data-lucide="x" class="w-6 h-6"></i>
                    </button>
                </div>
                
                <form id="packageForm" class="space-y-4">
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Package Name</label>
                            <input type="text" name="name" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Activity Type</label>
                            <select name="activity_type" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500">
                                <option value="Island Hopping">Island Hopping</option>
                                <option value="Snorkeling">Snorkeling</option>
                            </select>
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                        <textarea name="description" required rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500"></textarea>
                    </div>

                    <div class="grid grid-cols-3 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Price (PHP)</label>
                            <input type="number" name="price" required min="0" step="0.01" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Duration (days)</label>
                            <input type="number" name="duration" required min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Max Participants</label>
                            <input type="number" name="max_participants" required min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500">
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">What's Included</label>
                        <textarea name="includes" required rows="2" placeholder="e.g., Boat ride, lunch, snorkeling gear" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500"></textarea>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4 border-t">
                        <button type="button" id="cancelPackage" class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 bg-emerald-600 hover:bg-emerald-700 text-white rounded-lg">
                            Create Package
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Reviews Modal -->
        <div id="reviewsModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
                    <!-- Modal Header with Gradient -->
                    <div class="bg-gradient-to-r from-blue-600 to-blue-800 text-white p-6 rounded-t-lg">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 id="reviewsModalTitle" class="text-2xl font-bold"></h2>
                                <p id="reviewsModalStats" class="text-sm text-blue-100 mt-1"></p>
                            </div>
                            <button onclick="closeReviewsModal()" class="text-white hover:text-blue-200 transition-colors p-2 rounded-full hover:bg-blue-700">
                                <i data-lucide="x" class="w-6 h-6"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Modal Body -->
                    <div class="p-6">
                        <!-- Reviews Filter -->
                        <div class="flex items-center justify-between mb-6">
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-600">Filter by:</span>
                                <select id="reviewsFilter" class="border border-gray-300 rounded-md px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                                    <option value="all">All Reviews</option>
                                    <option value="5">5 Stars</option>
                                    <option value="4">4 Stars</option>
                                    <option value="3">3 Stars</option>
                                    <option value="2">2 Stars</option>
                                    <option value="1">1 Star</option>
                                </select>
                            </div>
                            <div class="text-sm text-gray-500" id="reviewCount"></div>
                        </div>

                        <!-- Reviews Container -->
                        <div id="reviewsContainer" class="space-y-4">
                            <!-- Reviews will be loaded here -->
                        </div>

                        <!-- No Reviews Message -->
                        <div id="noReviewsMessage" class="hidden text-center py-8">
                            <div class="text-gray-400 mb-3">
                                <i data-lucide="message-square" class="w-12 h-12 mx-auto"></i>
                            </div>
                            <h3 class="text-lg font-semibold text-gray-600">No Reviews Yet</h3>
                            <p class="text-gray-500 mt-1">This package hasn't received any reviews yet.</p>
                        </div>
                    </div>

                    <!-- Modal Footer -->
                    <div class="border-t border-gray-200 p-4 bg-gray-50 rounded-b-lg">
                        <button onclick="closeReviewsModal()" class="w-full bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded-md transition-colors">
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        // Make packages and bookings data available to JavaScript
        const packages = <%- JSON.stringify(packages) %>;
        const bookings = <%- JSON.stringify(bookings) %>;

        // Tab functionality
        const tabBtns = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        tabBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const tabName = btn.dataset.tab;
                
                // Update button states
                tabBtns.forEach(b => {
                    b.classList.remove('active', 'border-emerald-500', 'text-emerald-600');
                    b.classList.add('border-transparent', 'text-gray-500');
                });
                btn.classList.add('active', 'border-emerald-500', 'text-emerald-600');
                btn.classList.remove('border-transparent', 'text-gray-500');
                
                // Update content visibility
                tabContents.forEach(content => {
                    content.classList.add('hidden');
                });
                document.getElementById(`${tabName}-tab`).classList.remove('hidden');
            });
        });

        // Package modal functionality
        const packageModal = document.getElementById('packageModal');
        const packageForm = document.getElementById('packageForm');
        const addPackageBtn = document.getElementById('addPackageBtn');
        const closePackageModalBtn = document.getElementById('closePackageModal');
        const cancelPackageBtn = document.getElementById('cancelPackage');

        // Only attach event listeners if elements exist
        if (addPackageBtn) {
            addPackageBtn.addEventListener('click', () => {
                packageModal.classList.remove('hidden');
                packageModal.classList.add('flex');
            });
        }

        if (closePackageModalBtn) {
            closePackageModalBtn.addEventListener('click', closePackageModal);
        }

        if (cancelPackageBtn) {
            cancelPackageBtn.addEventListener('click', closePackageModal);
        }

        function closePackageModal() {
            if (packageModal) {
                packageModal.classList.add('hidden');
                packageModal.classList.remove('flex');
            }
            if (packageForm) {
                packageForm.reset();
            }
        }

        if (packageForm) {
            packageForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = new FormData(packageForm);
                const data = Object.fromEntries(formData);

                try {
                    const response = await fetch('/provider/activities/packages', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    if (result.success) {
                        alert('Package created successfully!');
                        location.reload();
                    } else {
                        alert(result.message);
                    }
                } catch (error) {
                    alert('Failed to create package');
                }
            });
        }

        async function updateBookingStatus(bookingId, status) {
            try {
                const response = await fetch(`/provider/activities/bookings/${bookingId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status })
                });

                const result = await response.json();
                if (result.success) {
                    alert('Booking status updated successfully!');
                    location.reload();
                } else {
                    alert(result.message);
                }
            } catch (error) {
                alert('Failed to update booking status');
            }
        }

        function editPackage(packageId) {
            // Implement edit functionality
            alert('Edit functionality to be implemented');
        }

        function deletePackage(packageId) {
            if (confirm('Are you sure you want to delete this package?')) {
                // Implement delete functionality
                alert('Delete functionality to be implemented');
            }
        }

        function viewPackageReviews(packageId) {
            const package = packages.find(p => p.id === packageId);
            const packageBookings = bookings.filter(b => b.package_id === packageId && b.rating);

            // Update modal title and stats
            document.getElementById('reviewsModalTitle').textContent = package.name;
            document.getElementById('reviewsModalStats').textContent = 
                package.average_rating 
                    ? `Average rating: ${Number(package.average_rating).toFixed(1)} stars â€¢ ${package.review_count} reviews`
                    : 'No ratings yet';

            // Update review count
            document.getElementById('reviewCount').textContent = 
                `Showing ${packageBookings.length} review${packageBookings.length !== 1 ? 's' : ''}`;

            // Show/hide no reviews message
            const noReviewsMessage = document.getElementById('noReviewsMessage');
            const reviewsContainer = document.getElementById('reviewsContainer');

            if (packageBookings.length === 0) {
                noReviewsMessage.classList.remove('hidden');
                reviewsContainer.classList.add('hidden');
            } else {
                noReviewsMessage.classList.add('hidden');
                reviewsContainer.classList.remove('hidden');

                // Render reviews
                const reviewsHTML = packageBookings.map(booking => `
                    <div class="bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow">
                        <div class="flex items-center justify-between mb-3">
                            <div class="flex items-center space-x-3">
                                <div class="flex text-yellow-400">
                                    ${Array(5).fill(0).map((_, i) => `
                                        <i data-lucide="${i < booking.rating ? 'star' : 'star'}" 
                                           class="w-4 h-4 ${i < booking.rating ? 'text-yellow-400' : 'text-gray-300'}">
                                        </i>
                                    `).join('')}
                                </div>
                                <span class="text-sm text-gray-600">
                                    ${new Date(booking.review_date).toLocaleDateString('en-US', { 
                                        year: 'numeric', 
                                        month: 'long', 
                                        day: 'numeric' 
                                    })}
                                </span>
                            </div>
                            <div class="flex items-center">
                                <i data-lucide="user" class="w-4 h-4 text-gray-400 mr-2"></i>
                                <span class="text-sm font-medium text-gray-700">
                                    ${booking.first_name} ${booking.last_name}
                                </span>
                            </div>
                        </div>
                        <div class="prose prose-sm max-w-none">
                            <p class="text-gray-700">${booking.comment}</p>
                        </div>
                    </div>
                `).join('');

                reviewsContainer.innerHTML = reviewsHTML;
            }

            // Show modal
            const modal = document.getElementById('reviewsModal');
            modal.classList.remove('hidden');
            
            // Initialize Lucide icons for the new content
            lucide.createIcons();

            // Setup filter functionality
            const filterSelect = document.getElementById('reviewsFilter');
            filterSelect.value = 'all'; // Reset filter
            filterSelect.onchange = function() {
                const rating = this.value;
                const filteredBookings = rating === 'all' 
                    ? packageBookings 
                    : packageBookings.filter(b => b.rating === Number(rating));
                
                document.getElementById('reviewCount').textContent = 
                    `Showing ${filteredBookings.length} review${filteredBookings.length !== 1 ? 's' : ''}`;

                if (filteredBookings.length === 0) {
                    reviewsContainer.innerHTML = `
                        <div class="text-center py-8">
                            <p class="text-gray-500">No reviews found with ${rating} stars.</p>
                        </div>
                    `;
                } else {
                    // Re-render reviews with filter
                    const filteredHTML = filteredBookings.map(booking => `
                        <div class="bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center space-x-3">
                                    <div class="flex text-yellow-400">
                                        ${Array(5).fill(0).map((_, i) => `
                                            <i data-lucide="${i < booking.rating ? 'star' : 'star'}" 
                                               class="w-4 h-4 ${i < booking.rating ? 'text-yellow-400' : 'text-gray-300'}">
                                            </i>
                                        `).join('')}
                                    </div>
                                    <span class="text-sm text-gray-600">
                                        ${new Date(booking.review_date).toLocaleDateString('en-US', { 
                                            year: 'numeric', 
                                            month: 'long', 
                                            day: 'numeric' 
                                        })}
                                    </span>
                                </div>
                                <div class="flex items-center">
                                    <i data-lucide="user" class="w-4 h-4 text-gray-400 mr-2"></i>
                                    <span class="text-sm font-medium text-gray-700">
                                        ${booking.first_name} ${booking.last_name}
                                    </span>
                                </div>
                            </div>
                            <div class="prose prose-sm max-w-none">
                                <p class="text-gray-700">${booking.comment}</p>
                            </div>
                        </div>
                    `).join('');

                    reviewsContainer.innerHTML = filteredHTML;
                    lucide.createIcons();
                }
            };
        }

        function closeReviewsModal() {
            const modal = document.getElementById('reviewsModal');
            modal.classList.add('hidden');
            // Reset filter
            document.getElementById('reviewsFilter').value = 'all';
        }

        // Close reviews modal when clicking outside
        document.getElementById('reviewsModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeReviewsModal();
            }
        });
    </script>
</body>
</html>